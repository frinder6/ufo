<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ufo.mapper.LogInfoEntityMapper" >
  <resultMap id="BaseResultMap" type="com.ufo.entity.LogInfoEntity" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="host" property="host" jdbcType="VARCHAR" />
    <result column="handler" property="handler" jdbcType="VARCHAR" />
    <result column="request_url" property="requestUrl" jdbcType="VARCHAR" />
    <result column="request_params" property="requestParams" jdbcType="VARCHAR" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="updater" property="updater" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ufo.entity.LogInfoEntityWithBLOBs" extends="BaseResultMap" >
    <result column="method_params" property="methodParams" jdbcType="LONGVARCHAR" />
    <result column="result" property="result" jdbcType="LONGVARCHAR" />
    <result column="error" property="error" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, `host`, `handler`, request_url, request_params, class_name, `method`, `status`, 
    create_time, creater, update_time, updater
  </sql>
  <sql id="Blob_Column_List" >
    method_params, `result`, error
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ufo_log_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ufo_log_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ufo.entity.LogInfoEntityWithBLOBs" >
    insert into ufo_log_info (id, `host`, `handler`, 
      request_url, request_params, class_name, 
      `method`, `status`, create_time, 
      creater, update_time, updater, 
      method_params, `result`, error
      )
    values (#{id,jdbcType=BIGINT}, #{host,jdbcType=VARCHAR}, #{handler,jdbcType=VARCHAR}, 
      #{requestUrl,jdbcType=VARCHAR}, #{requestParams,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{creater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, 
      #{methodParams,jdbcType=LONGVARCHAR}, #{result,jdbcType=LONGVARCHAR}, #{error,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ufo.entity.LogInfoEntityWithBLOBs" >
    insert into ufo_log_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="host != null" >
        `host`,
      </if>
      <if test="handler != null" >
        `handler`,
      </if>
      <if test="requestUrl != null" >
        request_url,
      </if>
      <if test="requestParams != null" >
        request_params,
      </if>
      <if test="className != null" >
        class_name,
      </if>
      <if test="method != null" >
        `method`,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="methodParams != null" >
        method_params,
      </if>
      <if test="result != null" >
        `result`,
      </if>
      <if test="error != null" >
        error,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="host != null" >
        #{host,jdbcType=VARCHAR},
      </if>
      <if test="handler != null" >
        #{handler,jdbcType=VARCHAR},
      </if>
      <if test="requestUrl != null" >
        #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="requestParams != null" >
        #{requestParams,jdbcType=VARCHAR},
      </if>
      <if test="className != null" >
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="methodParams != null" >
        #{methodParams,jdbcType=LONGVARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=LONGVARCHAR},
      </if>
      <if test="error != null" >
        #{error,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ufo.entity.LogInfoEntityWithBLOBs" >
    update ufo_log_info
    <set >
      <if test="host != null" >
        `host` = #{host,jdbcType=VARCHAR},
      </if>
      <if test="handler != null" >
        `handler` = #{handler,jdbcType=VARCHAR},
      </if>
      <if test="requestUrl != null" >
        request_url = #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="requestParams != null" >
        request_params = #{requestParams,jdbcType=VARCHAR},
      </if>
      <if test="className != null" >
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        `method` = #{method,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="methodParams != null" >
        method_params = #{methodParams,jdbcType=LONGVARCHAR},
      </if>
      <if test="result != null" >
        `result` = #{result,jdbcType=LONGVARCHAR},
      </if>
      <if test="error != null" >
        error = #{error,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ufo.entity.LogInfoEntityWithBLOBs" >
    update ufo_log_info
    set `host` = #{host,jdbcType=VARCHAR},
      `handler` = #{handler,jdbcType=VARCHAR},
      request_url = #{requestUrl,jdbcType=VARCHAR},
      request_params = #{requestParams,jdbcType=VARCHAR},
      class_name = #{className,jdbcType=VARCHAR},
      `method` = #{method,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creater = #{creater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      method_params = #{methodParams,jdbcType=LONGVARCHAR},
      `result` = #{result,jdbcType=LONGVARCHAR},
      error = #{error,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ufo.entity.LogInfoEntity" >
    update ufo_log_info
    set `host` = #{host,jdbcType=VARCHAR},
      `handler` = #{handler,jdbcType=VARCHAR},
      request_url = #{requestUrl,jdbcType=VARCHAR},
      request_params = #{requestParams,jdbcType=VARCHAR},
      class_name = #{className,jdbcType=VARCHAR},
      `method` = #{method,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creater = #{creater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>